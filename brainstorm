Overview:
To synthesize profitable trading strategies, the key issue is to accurately predict the future stock price.
There are mainly three approaches to make the predication:
1) Cross-sectional regressions (OLS)
   cons: low accuracy due to the violation of OLS assumptions
2) Time series models   (eg ARIMA)
   cons: don't work well on volatile data
3) Machine learning models  -> Higher accuracy even for volatile data

Our goal:
Compare the predication accuracy of CNN and LSTM algorithms and find the optimal model to conduct multivariate time series forecasting

Data:
A single stock/ETF's historical pricing data (High Low Open Close Volume) for one year(?), at 5 mins interval(?) 

Logistic:
Use High, Low, Close, Volume data as regressors(features) and use Open data as response 

Hyperparameters:
0. number of layers (hidden layer=1)
1. number of neurons in each layer
2. batch size
3. activation function
4. optimizer

Evaluating measures:
accuracy and generalization error

QUESTIONS TO ANSWER:
0. how to decide the number of layers and neurons in each layer -> Reference 3

----------------------------------------Below are out of the requirement of proposal------------------------------------ 
Steps:
0. collect data
1. preprocessing data: calculate returns and convert it into stationary sequence
2. initialize an neuron network architecture through xxx
3. prune unnecessary nodes 




References:
1. Analysis and Forecasting of Financial Time Series Using CNN and LSTM-Based Deep Learning
https://link.springer.com/chapter/10.1007/978-981-16-4807-6_39
2. Integrating Fundamental and Technical Analysis of Stock Market through Multi-layer Perceptron
https://ieeexplore.ieee.org/abstract/document/8488440
3. How to choose the number of hidden layers and nodes in a feedforward neural network?
https://stats.stackexchange.com/questions/181/how-to-choose-the-number-of-hidden-layers-and-nodes-in-a-feedforward-neural-netw
(->  (i) the number of hidden layers equals one; and (ii) the number of neurons in that layer is the mean of the neurons in the input and output layers.)
